[
  {
    "id": "k8s-001",
    "tool": "Kubernetes",
    "question": "What is the difference between a Deployment and a StatefulSet in Kubernetes?",
    "options": [
      "Deployment is for stateless apps, StatefulSet for stateful apps",
      "StatefulSet offers rolling updates by default",
      "Deployment provides ordered pod management",
      "There is no difference"
    ],
    "answer": "Deployment is for stateless apps, StatefulSet for stateful apps"
  },
  {
    "id": "k8s-002",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes ConfigMap used for?",
    "options": [
      "Network configuration",
      "Storing sensitive data",
      "Managing container resources",
      "Storing configuration data"
    ],
    "answer": "Storing configuration data"
  },
  {
    "id": "k8s-003",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Service and what problem does it solve?",
    "options": [
      "It manages pod storage",
      "It handles autoscaling",
      "It provides a stable network endpoint for pods",
      "It manages configuration data"
    ],
    "answer": "It provides a stable network endpoint for pods"
  },
  {
    "id": "k8s-004",
    "tool": "Kubernetes",
    "question": "What is the purpose of a Kubernetes Namespace?",
    "options": [
      "To separate resources and create virtual clusters",
      "To monitor applications",
      "To backup resources",
      "To increase performance"
    ],
    "answer": "To separate resources and create virtual clusters"
  },
  {
    "id": "k8s-005",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Ingress?",
    "options": [
      "A security policy",
      "A storage controller",
      "An API object that manages external access to services",
      "A type of pod"
    ],
    "answer": "An API object that manages external access to services"
  },
  {
    "id": "k8s-006",
    "tool": "Kubernetes",
    "question": "What is the difference between Liveness and Readiness probes?",
    "options": [
      "They are identical",
      "Readiness restarts containers, Liveness doesn't",
      "Liveness is for HTTP only",
      "Liveness checks if container is started, Readiness checks if it can serve traffic"
    ],
    "answer": "Liveness checks if container is started, Readiness checks if it can serve traffic"
  },
  {
    "id": "k8s-007",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes DaemonSet?",
    "options": [
      "A database service",
      "A backup tool",
      "A monitoring agent",
      "A pod that runs on all nodes"
    ],
    "answer": "A pod that runs on all nodes"
  },
  {
    "id": "k8s-008",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Secret used for?",
    "options": [
      "Logging data",
      "Performance metrics",
      "Storing sensitive information",
      "Storing configuration files"
    ],
    "answer": "Storing sensitive information"
  },
  {
    "id": "k8s-009",
    "tool": "Kubernetes",
    "question": "What is the role of kube-proxy in Kubernetes?",
    "options": [
      "Network proxy and load balancer",
      "Scheduler",
      "API server",
      "Container runtime"
    ],
    "answer": "Network proxy and load balancer"
  },
  {
    "id": "k8s-010",
    "tool": "Kubernetes",
    "question": "What is Horizontal Pod Autoscaler (HPA)?",
    "options": [
      "Scales storage",
      "Scales node size",
      "Scales network bandwidth",
      "Automatically scales number of pods based on CPU/memory"
    ],
    "answer": "Automatically scales number of pods based on CPU/memory"
  },
  {
    "id": "k8s-011",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Job?",
    "options": [
      "Monitors resources",
      "Handles networking",
      "Manages persistent storage",
      "Runs pods until completion"
    ],
    "answer": "Runs pods until completion"
  },
  {
    "id": "k8s-012",
    "tool": "Kubernetes",
    "question": "What is etcd in Kubernetes?",
    "options": [
      "Key-value store for cluster data",
      "Container runtime",
      "Networking plugin",
      "Load balancer"
    ],
    "answer": "Key-value store for cluster data"
  },
  {
    "id": "k8s-013",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Persistent Volume (PV)?",
    "options": [
      "Temporary storage",
      "Memory storage",
      "Storage resource in the cluster",
      "Network storage"
    ],
    "answer": "Storage resource in the cluster"
  },
  {
    "id": "k8s-014",
    "tool": "Kubernetes",
    "question": "What is the difference between ClusterIP and NodePort services?",
    "options": [
      "ClusterIP is faster",
      "They are the same",
      "NodePort is for databases only",
      "ClusterIP is internal, NodePort is external"
    ],
    "answer": "ClusterIP is internal, NodePort is external"
  },
  {
    "id": "k8s-015",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Custom Resource Definition (CRD)?",
    "options": [
      "Extends Kubernetes API with custom resources",
      "Creates namespaces",
      "Manages users",
      "Defines container images"
    ],
    "answer": "Extends Kubernetes API with custom resources"
  },
  {
    "id": "k8s-016",
    "tool": "Kubernetes",
    "question": "What is the role of Kubernetes Scheduler?",
    "options": [
      "Handles networking",
      "Manages storage",
      "Monitors health",
      "Assigns pods to nodes"
    ],
    "answer": "Assigns pods to nodes"
  },
  {
    "id": "k8s-017",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Taint and Toleration?",
    "options": [
      "Prevents pods from being scheduled on inappropriate nodes",
      "Network policy",
      "Storage feature",
      "Security context"
    ],
    "answer": "Prevents pods from being scheduled on inappropriate nodes"
  },
  {
    "id": "k8s-018",
    "tool": "Kubernetes",
    "question": "What is Kubernetes RBAC?",
    "options": [
      "Role-Based Access Control for authorization",
      "Storage class",
      "Network policy",
      "Resource management"
    ],
    "answer": "Role-Based Access Control for authorization"
  },
  {
    "id": "k8s-019",
    "tool": "Kubernetes",
    "question": "What is a Kubernetes Pod Disruption Budget?",
    "options": [
      "Budget tracking",
      "Resource quotas",
      "Cost management",
      "Limits voluntary disruptions during maintenance"
    ],
    "answer": "Limits voluntary disruptions during maintenance"
  },
  {
    "id": "k8s-020",
    "tool": "Kubernetes",
    "question": "What is Kubernetes Helm?",
    "options": [
      "CI/CD tool",
      "Security scanner",
      "Package manager for Kubernetes",
      "Monitoring tool"
    ],
    "answer": "Package manager for Kubernetes"
  },
  {
    "id": "helm-001",
    "tool": "Helm",
    "question": "What is the purpose of Helm charts in Kubernetes?",
    "options": [
      "To package and deploy Kubernetes applications",
      "To secure cluster access",
      "To monitor applications",
      "To backup Kubernetes resources"
    ],
    "answer": "To package and deploy Kubernetes applications"
  },
  {
    "id": "helm-002",
    "tool": "Helm",
    "question": "What is the difference between 'helm install' and 'helm upgrade'?",
    "options": [
      "They are identical commands",
      "helm install is for development only",
      "helm install creates new releases, helm upgrade updates existing ones",
      "helm upgrade installs new charts"
    ],
    "answer": "helm install creates new releases, helm upgrade updates existing ones"
  },
  {
    "id": "helm-003",
    "tool": "Helm",
    "question": "What are Helm values and how are they used?",
    "options": [
      "They define chart dependencies",
      "They manage Helm repository URLs",
      "They store sensitive data",
      "They customize chart deployment configuration"
    ],
    "answer": "They customize chart deployment configuration"
  },
  {
    "id": "helm-004",
    "tool": "Helm",
    "question": "What is a Helm release?",
    "options": [
      "A security update",
      "A repository",
      "An instance of a deployed chart",
      "A new version of Helm"
    ],
    "answer": "An instance of a deployed chart"
  },
  {
    "id": "helm-005",
    "tool": "Helm",
    "question": "What is the purpose of Helm templates?",
    "options": [
      "To generate Kubernetes manifest files",
      "To style charts",
      "To format documentation",
      "To create HTML pages"
    ],
    "answer": "To generate Kubernetes manifest files"
  },
  {
    "id": "helm-006",
    "tool": "Helm",
    "question": "What is Helmfile?",
    "options": [
      "A Helm chart repository",
      "A template engine",
      "A security plugin",
      "A declarative spec for deploying Helm charts"
    ],
    "answer": "A declarative spec for deploying Helm charts"
  },
  {
    "id": "helm-007",
    "tool": "Helm",
    "question": "What is the difference between Helm 2 and Helm 3?",
    "options": [
      "Helm 3 doesn't support charts",
      "Helm 3 removed Tiller",
      "No significant differences",
      "Helm 2 is faster"
    ],
    "answer": "Helm 3 removed Tiller"
  },
  {
    "id": "helm-008",
    "tool": "Helm",
    "question": "What is a Helm repository?",
    "options": [
      "A place where charts can be stored and shared",
      "A Docker registry",
      "A Kubernetes cluster",
      "A Git repository"
    ],
    "answer": "A place where charts can be stored and shared"
  },
  {
    "id": "helm-009",
    "tool": "Helm",
    "question": "What is the purpose of 'helm dependency'?",
    "options": [
      "Manage chart dependencies",
      "Check Helm version",
      "Install plugins",
      "Update repositories"
    ],
    "answer": "Manage chart dependencies"
  },
  {
    "id": "helm-010",
    "tool": "Helm",
    "question": "What is Helm hook?",
    "options": [
      "A fishing tool",
      "A chart type",
      "A way to run jobs during release lifecycle",
      "A repository feature"
    ],
    "answer": "A way to run jobs during release lifecycle"
  },
  {
    "id": "helm-011",
    "tool": "Helm",
    "question": "What is the Chart.yaml file used for?",
    "options": [
      "Value overrides",
      "Template definitions",
      "Dependency locks",
      "Chart metadata and configuration"
    ],
    "answer": "Chart metadata and configuration"
  },
  {
    "id": "helm-012",
    "tool": "Helm",
    "question": "What is the purpose of 'helm rollback'?",
    "options": [
      "Create backup",
      "Delete a release",
      "Revert to previous release",
      "Update charts"
    ],
    "answer": "Revert to previous release"
  },
  {
    "id": "helm-013",
    "tool": "Helm",
    "question": "What are Helm plugins?",
    "options": [
      "Documentation",
      "Extend Helm functionality",
      "Chart templates",
      "Security patches"
    ],
    "answer": "Extend Helm functionality"
  },
  {
    "id": "helm-014",
    "tool": "Helm",
    "question": "What is the values.yaml file?",
    "options": [
      "Chart metadata",
      "Template helpers",
      "Default configuration values for chart",
      "Plugin configuration"
    ],
    "answer": "Default configuration values for chart"
  },
  {
    "id": "helm-015",
    "tool": "Helm",
    "question": "What is 'helm template' command used for?",
    "options": [
      "Create repositories",
      "Manage releases",
      "Render chart templates locally",
      "Install charts"
    ],
    "answer": "Render chart templates locally"
  },
  {
    "id": "helm-016",
    "tool": "Helm",
    "question": "What is a Helm subchart?",
    "options": [
      "A small chart",
      "A broken chart",
      "A chart within another chart",
      "A test chart"
    ],
    "answer": "A chart within another chart"
  },
  {
    "id": "helm-017",
    "tool": "Helm",
    "question": "What is the purpose of Chart.lock file?",
    "options": [
      "Template locking",
      "Release history",
      "Store secrets",
      "Lock dependency versions"
    ],
    "answer": "Lock dependency versions"
  },
  {
    "id": "helm-018",
    "tool": "Helm",
    "question": "What is Helm tiller (in Helm 2)?",
    "options": [
      "Client tool",
      "Server-side component managing releases",
      "Template engine",
      "Repository manager"
    ],
    "answer": "Server-side component managing releases"
  },
  {
    "id": "helm-019",
    "tool": "Helm",
    "question": "What is the difference between 'helm get' and 'helm list'?",
    "options": [
      "'list' is for repositories",
      "They are identical",
      "'get' shows detailed release info, 'list' shows releases",
      "'get' is for templates"
    ],
    "answer": "'get' shows detailed release info, 'list' shows releases"
  },
  {
    "id": "helm-020",
    "tool": "Helm",
    "question": "What is Helm schema validation?",
    "options": [
      "Check dependencies",
      "Validate values against JSON schema",
      "Check chart syntax",
      "Validate Kubernetes resources"
    ],
    "answer": "Validate values against JSON schema"
  },
  {
    "id": "git-001",
    "tool": "Git",
    "question": "What is the difference between 'git merge' and 'git rebase'?",
    "options": [
      "There is no difference",
      "rebase is for merging branches",
      "merge creates a merge commit, rebase rewrites history",
      "merge is faster than rebase"
    ],
    "answer": "merge creates a merge commit, rebase rewrites history"
  },
  {
    "id": "git-002",
    "tool": "Git",
    "question": "How do you revert a commit that has already been pushed to remote?",
    "options": [
      "git undo",
      "git remove",
      "git revert",
      "git delete"
    ],
    "answer": "git revert"
  },
  {
    "id": "git-003",
    "tool": "Git",
    "question": "What is a Git hook and how is it used?",
    "options": [
      "A graphical interface for Git",
      "Scripts that run automatically before or after Git events",
      "A backup mechanism",
      "A type of merge strategy"
    ],
    "answer": "Scripts that run automatically before or after Git events"
  },
  {
    "id": "git-004",
    "tool": "Git",
    "question": "What is the difference between 'git fetch' and 'git pull'?",
    "options": [
      "They are identical",
      "fetch merges automatically",
      "pull is faster",
      "fetch downloads changes, pull downloads and merges"
    ],
    "answer": "fetch downloads changes, pull downloads and merges"
  },
  {
    "id": "git-005",
    "tool": "Git",
    "question": "What is Git stash used for?",
    "options": [
      "Merge branches",
      "Commit changes",
      "Temporarily save changes without committing",
      "Delete changes"
    ],
    "answer": "Temporarily save changes without committing"
  },
  {
    "id": "git-006",
    "tool": "Git",
    "question": "What is a Git cherry-pick?",
    "options": [
      "Merge all commits",
      "Apply specific commit from one branch to another",
      "Delete commit",
      "Pick random commit"
    ],
    "answer": "Apply specific commit from one branch to another"
  },
  {
    "id": "git-007",
    "tool": "Git",
    "question": "What is the purpose of .gitignore file?",
    "options": [
      "Specify files to ignore in version control",
      "Define merge strategies",
      "Store credentials",
      "Track all files"
    ],
    "answer": "Specify files to ignore in version control"
  },
  {
    "id": "git-008",
    "tool": "Git",
    "question": "What is Git bisect used for?",
    "options": [
      "Split commits",
      "Delete history",
      "Merge branches",
      "Find commit that introduced a bug"
    ],
    "answer": "Find commit that introduced a bug"
  },
  {
    "id": "git-009",
    "tool": "Git",
    "question": "What is the difference between Git and GitHub?",
    "options": [
      "Git is version control system, GitHub is hosting service",
      "They are the same",
      "Git is for code, GitHub for docs",
      "GitHub is local, Git is cloud"
    ],
    "answer": "Git is version control system, GitHub is hosting service"
  },
  {
    "id": "git-010",
    "tool": "Git",
    "question": "What is a Git submodule?",
    "options": [
      "Repository within another repository",
      "Small module",
      "Branch type",
      "Commit message"
    ],
    "answer": "Repository within another repository"
  },
  {
    "id": "git-011",
    "tool": "Git",
    "question": "What is Git blame used for?",
    "options": [
      "Assign blame for bugs",
      "See who last modified each line",
      "Track time",
      "Measure performance"
    ],
    "answer": "See who last modified each line"
  },
  {
    "id": "git-012",
    "tool": "Git",
    "question": "What is the purpose of git rebase --interactive?",
    "options": [
      "Create branches",
      "Delete repository",
      "Edit, squash, reorder commits",
      "Merge branches"
    ],
    "answer": "Edit, squash, reorder commits"
  },
  {
    "id": "git-013",
    "tool": "Git",
    "question": "What is Git flow?",
    "options": [
      "A command",
      "A branching model",
      "A repository",
      "A merge strategy"
    ],
    "answer": "A branching model"
  },
  {
    "id": "git-014",
    "tool": "Git",
    "question": "What is a detached HEAD in Git?",
    "options": [
      "Missing HEAD",
      "Broken repository",
      "Corrupted git",
      "When HEAD points to commit not branch"
    ],
    "answer": "When HEAD points to commit not branch"
  },
  {
    "id": "git-015",
    "tool": "Git",
    "question": "What is git reflog?",
    "options": [
      "Repository log",
      "Error log",
      "Reference logs showing HEAD changes",
      "Performance log"
    ],
    "answer": "Reference logs showing HEAD changes"
  },
  {
    "id": "git-016",
    "tool": "Git",
    "question": "What is the purpose of git clean?",
    "options": [
      "Clean commit history",
      "Remove remote",
      "Remove untracked files",
      "Delete branches"
    ],
    "answer": "Remove untracked files"
  },
  {
    "id": "git-017",
    "tool": "Git",
    "question": "What is git archive used for?",
    "options": [
      "Compress repository",
      "Export commits",
      "Backup repository",
      "Create archive of files from tree"
    ],
    "answer": "Create archive of files from tree"
  },
  {
    "id": "git-018",
    "tool": "Git",
    "question": "What is a Git tag?",
    "options": [
      "Commit message",
      "Merge point",
      "Branch label",
      "Pointer to specific commit for releases"
    ],
    "answer": "Pointer to specific commit for releases"
  },
  {
    "id": "git-019",
    "tool": "Git",
    "question": "What is git worktree?",
    "options": [
      "Work directory",
      "Multiple working trees attached to repository",
      "Tree structure",
      "File system"
    ],
    "answer": "Multiple working trees attached to repository"
  },
  {
    "id": "git-020",
    "tool": "Git",
    "question": "What is the purpose of git fsck?",
    "options": [
      "Verify repository integrity",
      "Speed up repository",
      "Check file size",
      "Fix commits"
    ],
    "answer": "Verify repository integrity"
  },
  {
    "id": "gh-001",
    "tool": "GitHub Administration",
    "question": "What is the purpose of GitHub Actions?",
    "options": [
      "Code review",
      "Documentation hosting",
      "CI/CD automation",
      "Social coding"
    ],
    "answer": "CI/CD automation"
  },
  {
    "id": "gh-002",
    "tool": "GitHub Administration",
    "question": "What are GitHub Organizations used for?",
    "options": [
      "Managing multiple repositories and teams",
      "Only for enterprise customers",
      "Code backup",
      "Personal projects only"
    ],
    "answer": "Managing multiple repositories and teams"
  },
  {
    "id": "gh-003",
    "tool": "GitHub Administration",
    "question": "What is GitHub Packages?",
    "options": [
      "Box packaging",
      "Container only",
      "Shipping service",
      "Package registry for various package managers"
    ],
    "answer": "Package registry for various package managers"
  },
  {
    "id": "gh-004",
    "tool": "GitHub Administration",
    "question": "What are GitHub Codespaces?",
    "options": [
      "Code storage",
      "Repository spaces",
      "Documentation areas",
      "Cloud development environments"
    ],
    "answer": "Cloud development environments"
  },
  {
    "id": "gh-005",
    "tool": "GitHub Administration",
    "question": "What is GitHub Copilot?",
    "options": [
      "CI/CD tool",
      "Security scanner",
      "Code reviewer",
      "AI pair programmer"
    ],
    "answer": "AI pair programmer"
  },
  {
    "id": "gh-006",
    "tool": "GitHub Administration",
    "question": "What are GitHub Security Advisories?",
    "options": [
      "Privately discuss and fix security vulnerabilities",
      "Virus scanner",
      "Firewall tool",
      "Security news"
    ],
    "answer": "Privately discuss and fix security vulnerabilities"
  },
  {
    "id": "gh-007",
    "tool": "GitHub Administration",
    "question": "What is GitHub Discussions?",
    "options": [
      "Forum-like conversations for repositories",
      "Meeting tool",
      "Chat application",
      "Code discussions"
    ],
    "answer": "Forum-like conversations for repositories"
  },
  {
    "id": "gh-008",
    "tool": "GitHub Administration",
    "question": "What are GitHub Environments?",
    "options": [
      "Code environments",
      "Test areas",
      "Target deployment environments with protection rules",
      "Development setups"
    ],
    "answer": "Target deployment environments with protection rules"
  },
  {
    "id": "gh-009",
    "tool": "GitHub Administration",
    "question": "What is GitHub Advanced Security?",
    "options": [
      "More storage",
      "Premium support",
      "Extra security features including code scanning",
      "Faster access"
    ],
    "answer": "Extra security features including code scanning"
  },
  {
    "id": "gh-010",
    "tool": "GitHub Administration",
    "question": "What are GitHub Rulesets?",
    "options": [
      "Code rules",
      "Organization policies",
      "Rules for branches and tags",
      "Team rules"
    ],
    "answer": "Rules for branches and tags"
  },
  {
    "id": "gh-011",
    "tool": "GitHub Administration",
    "question": "What is GitHub CLI?",
    "options": [
      "Web interface",
      "Mobile app",
      "Command line interface for GitHub",
      "Graphical interface"
    ],
    "answer": "Command line interface for GitHub"
  },
  {
    "id": "gh-012",
    "tool": "GitHub Administration",
    "question": "What are GitHub Templates?",
    "options": [
      "Pre-configured repository templates",
      "Issue templates only",
      "Document templates",
      "Code templates"
    ],
    "answer": "Pre-configured repository templates"
  },
  {
    "id": "gh-013",
    "tool": "GitHub Administration",
    "question": "What is GitHub Container Registry?",
    "options": [
      "Docker only",
      "Package registry",
      "Container image storage and management",
      "Code registry"
    ],
    "answer": "Container image storage and management"
  },
  {
    "id": "gh-014",
    "tool": "GitHub Administration",
    "question": "What are GitHub Secret Scanning?",
    "options": [
      "Encryption tool",
      "Password manager",
      "Security training",
      "Automatically finds and alerts about secrets in code"
    ],
    "answer": "Automatically finds and alerts about secrets in code"
  },
  {
    "id": "gh-015",
    "tool": "GitHub Administration",
    "question": "What is GitHub Sponsors?",
    "options": [
      "Investment platform",
      "Grant program",
      "Funding platform for developers",
      "Salary system"
    ],
    "answer": "Funding platform for developers"
  },
  {
    "id": "gh-016",
    "tool": "GitHub Administration",
    "question": "What are GitHub Issues?",
    "options": [
      "System issues",
      "Personal issues",
      "Track bugs, tasks, and feature requests",
      "Network issues"
    ],
    "answer": "Track bugs, tasks, and feature requests"
  },
  {
    "id": "gh-017",
    "tool": "GitHub Administration",
    "question": "What is GitHub Projects?",
    "options": [
      "Research projects",
      "Code projects",
      "Personal projects",
      "Project management tool integrated with GitHub"
    ],
    "answer": "Project management tool integrated with GitHub"
  },
  {
    "id": "gh-018",
    "tool": "GitHub Administration",
    "question": "What are GitHub Branch Protection Rules?",
    "options": [
      "Security rules",
      "Rules to protect important branches",
      "Code rules",
      "Access rules"
    ],
    "answer": "Rules to protect important branches"
  },
  {
    "id": "gh-019",
    "tool": "GitHub Administration",
    "question": "What is GitHub Enterprise?",
    "options": [
      "Educational version",
      "Trial version",
      "Self-hosted or cloud enterprise version",
      "Free version"
    ],
    "answer": "Self-hosted or cloud enterprise version"
  },
  {
    "id": "gh-020",
    "tool": "GitHub Administration",
    "question": "What are GitHub Apps?",
    "options": [
      "Third-party integrations with GitHub",
      "Web apps",
      "Mobile apps",
      "Desktop apps"
    ],
    "answer": "Third-party integrations with GitHub"
  },
  {
    "id": "tf-001",
    "tool": "Terraform",
    "question": "What is Terraform state and why is it important?",
    "options": [
      "It tracks resource metadata and dependencies",
      "It stores variable definitions",
      "It contains provider configurations",
      "It's optional for Terraform operations"
    ],
    "answer": "It tracks resource metadata and dependencies"
  },
  {
    "id": "tf-002",
    "tool": "Terraform",
    "question": "How do you pass variables to Terraform configuration?",
    "options": [
      ".tfvars files",
      "All of the above",
      "Using environment variables",
      "Command-line flags"
    ],
    "answer": "All of the above"
  },
  {
    "id": "tf-003",
    "tool": "Terraform",
    "question": "What is the purpose of Terraform modules?",
    "options": [
      "To configure providers",
      "To define variables",
      "To manage state files",
      "To create reusable infrastructure components"
    ],
    "answer": "To create reusable infrastructure components"
  },
  {
    "id": "tf-004",
    "tool": "Terraform",
    "question": "What is the difference between 'terraform plan' and 'terraform apply'?",
    "options": [
      "apply is for planning",
      "plan applies changes",
      "They are identical",
      "plan shows execution plan, apply implements it"
    ],
    "answer": "plan shows execution plan, apply implements it"
  },
  {
    "id": "tf-005",
    "tool": "Terraform",
    "question": "What is Terraform backend?",
    "options": [
      "Where state file is stored",
      "Cloud provider",
      "Programming language",
      "UI interface"
    ],
    "answer": "Where state file is stored"
  },
  {
    "id": "tf-006",
    "tool": "Terraform",
    "question": "What is Terraform provider?",
    "options": [
      "Configuration file",
      "Cloud account",
      "Plugin to interact with APIs",
      "User profile"
    ],
    "answer": "Plugin to interact with APIs"
  },
  {
    "id": "tf-007",
    "tool": "Terraform",
    "question": "What is the purpose of 'terraform destroy'?",
    "options": [
      "Delete code",
      "Remove managed infrastructure",
      "Remove variables",
      "Destroy state"
    ],
    "answer": "Remove managed infrastructure"
  },
  {
    "id": "tf-008",
    "tool": "Terraform",
    "question": "What are Terraform workspaces?",
    "options": [
      "Isolated state environments",
      "Code editors",
      "Working directories",
      "Cloud workspaces"
    ],
    "answer": "Isolated state environments"
  },
  {
    "id": "tf-009",
    "tool": "Terraform",
    "question": "What is Terraform Cloud?",
    "options": [
      "Managed service for Terraform",
      "Version control",
      "Code editor",
      "Cloud provider"
    ],
    "answer": "Managed service for Terraform"
  },
  {
    "id": "tf-010",
    "tool": "Terraform",
    "question": "What is the purpose of 'terraform import'?",
    "options": [
      "Import existing infrastructure into state",
      "Import variables",
      "Import modules",
      "Import code"
    ],
    "answer": "Import existing infrastructure into state"
  },
  {
    "id": "tf-011",
    "tool": "Terraform",
    "question": "What are Terraform data sources?",
    "options": [
      "Export data",
      "Store data",
      "Read information from providers",
      "Transform data"
    ],
    "answer": "Read information from providers"
  },
  {
    "id": "tf-012",
    "tool": "Terraform",
    "question": "What is Terraform state locking?",
    "options": [
      "Lock files",
      "Prevent concurrent state modifications",
      "Lock resources",
      "Lock users"
    ],
    "answer": "Prevent concurrent state modifications"
  },
  {
    "id": "tf-013",
    "tool": "Terraform",
    "question": "What is the purpose of 'terraform refresh'?",
    "options": [
      "Update state with real infrastructure",
      "Reload configuration",
      "Update providers",
      "Refresh UI"
    ],
    "answer": "Update state with real infrastructure"
  },
  {
    "id": "tf-014",
    "tool": "Terraform",
    "question": "What are Terraform outputs?",
    "options": [
      "Log files",
      "Expose information for other configurations",
      "Error messages",
      "Print statements"
    ],
    "answer": "Expose information for other configurations"
  },
  {
    "id": "tf-015",
    "tool": "Terraform",
    "question": "What is Terraform provisioner?",
    "options": [
      "Execute scripts on resource creation",
      "Provide resources",
      "Manage state",
      "Handle variables"
    ],
    "answer": "Execute scripts on resource creation"
  },
  {
    "id": "tf-016",
    "tool": "Terraform",
    "question": "What is the purpose of 'terraform taint'?",
    "options": [
      "Mark as secure",
      "Mark as error",
      "Mark as complete",
      "Mark resource for recreation"
    ],
    "answer": "Mark resource for recreation"
  },
  {
    "id": "tf-017",
    "tool": "Terraform",
    "question": "What are Terraform remote backends?",
    "options": [
      "Local storage",
      "Cloud providers",
      "Databases",
      "Store state in remote storage"
    ],
    "answer": "Store state in remote storage"
  },
  {
    "id": "tf-018",
    "tool": "Terraform",
    "question": "What is Terraform Sentinel?",
    "options": [
      "Monitoring tool",
      "Security scanner",
      "Code linter",
      "Policy-as-code framework"
    ],
    "answer": "Policy-as-code framework"
  },
  {
    "id": "tf-019",
    "tool": "Terraform",
    "question": "What is the purpose of 'terraform validate'?",
    "options": [
      "Validate providers",
      "Validate infrastructure",
      "Check configuration syntax",
      "Check state"
    ],
    "answer": "Check configuration syntax"
  },
  {
    "id": "tf-020",
    "tool": "Terraform",
    "question": "What are Terraform dynamic blocks?",
    "options": [
      "Update state",
      "Scale infrastructure",
      "Move resources",
      "Create nested blocks dynamically"
    ],
    "answer": "Create nested blocks dynamically"
  },
  {
    "id": "ans-001",
    "tool": "Ansible",
    "question": "What is an Ansible Playbook?",
    "options": [
      "An inventory file",
      "A configuration file for Ansible itself",
      "A YAML file defining automation tasks",
      "A collection of roles"
    ],
    "answer": "A YAML file defining automation tasks"
  },
  {
    "id": "ans-002",
    "tool": "Ansible",
    "question": "What is the difference between Ansible ad-hoc commands and playbooks?",
    "options": [
      "They are the same thing",
      "Ad-hoc uses YAML, playbooks use INI",
      "Playbooks are faster than ad-hoc",
      "Ad-hoc for simple tasks, playbooks for complex workflows"
    ],
    "answer": "Ad-hoc for simple tasks, playbooks for complex workflows"
  },
  {
    "id": "ans-003",
    "tool": "Ansible",
    "question": "What is Ansible Galaxy?",
    "options": [
      "A programming language",
      "A web-based UI for Ansible",
      "A repository for sharing Ansible roles",
      "A monitoring tool"
    ],
    "answer": "A repository for sharing Ansible roles"
  },
  {
    "id": "ans-004",
    "tool": "Ansible",
    "question": "What is an Ansible Role?",
    "options": [
      "Pre-packaged unit of tasks, handlers, etc.",
      "User role",
      "Security role",
      "Cloud role"
    ],
    "answer": "Pre-packaged unit of tasks, handlers, etc."
  },
  {
    "id": "ans-005",
    "tool": "Ansible",
    "question": "What is Ansible Inventory?",
    "options": [
      "Software inventory",
      "Asset inventory",
      "Network inventory",
      "List of managed nodes"
    ],
    "answer": "List of managed nodes"
  },
  {
    "id": "ans-006",
    "tool": "Ansible",
    "question": "What are Ansible Facts?",
    "options": [
      "Error messages",
      "System information gathered from nodes",
      "Documentation",
      "True statements"
    ],
    "answer": "System information gathered from nodes"
  },
  {
    "id": "ans-007",
    "tool": "Ansible",
    "question": "What is Ansible Vault?",
    "options": [
      "Monitor tasks",
      "Store playbooks",
      "Encrypt sensitive data",
      "Manage inventory"
    ],
    "answer": "Encrypt sensitive data"
  },
  {
    "id": "ans-008",
    "tool": "Ansible",
    "question": "What are Ansible Handlers?",
    "options": [
      "Error handlers",
      "User handlers",
      "Tasks that run when notified by other tasks",
      "Input handlers"
    ],
    "answer": "Tasks that run when notified by other tasks"
  },
  {
    "id": "ans-009",
    "tool": "Ansible",
    "question": "What is Ansible Tower/AWX?",
    "options": [
      "Programming language",
      "Web-based UI and API for Ansible",
      "Cloud service",
      "Command line tool"
    ],
    "answer": "Web-based UI and API for Ansible"
  },
  {
    "id": "ans-010",
    "tool": "Ansible",
    "question": "What are Ansible Modules?",
    "options": [
      "Code modules",
      "Hardware modules",
      "Network modules",
      "Reusable units of work"
    ],
    "answer": "Reusable units of work"
  },
  {
    "id": "ans-011",
    "tool": "Ansible",
    "question": "What is Ansible Pull?",
    "options": [
      "Push configuration",
      "Backup configuration",
      "Pull configuration from central server",
      "Delete configuration"
    ],
    "answer": "Pull configuration from central server"
  },
  {
    "id": "ans-012",
    "tool": "Ansible",
    "question": "What are Ansible Collections?",
    "options": [
      "Data collections",
      "File collections",
      "Packaging format for Ansible content",
      "Log collections"
    ],
    "answer": "Packaging format for Ansible content"
  },
  {
    "id": "ans-013",
    "tool": "Ansible",
    "question": "What is Ansible Conditionals?",
    "options": [
      "Conditional execution of tasks",
      "System conditions",
      "Network conditions",
      "Health conditions"
    ],
    "answer": "Conditional execution of tasks"
  },
  {
    "id": "ans-014",
    "tool": "Ansible",
    "question": "What are Ansible Loops?",
    "options": [
      "Network loops",
      "System loops",
      "Code loops",
      "Repeat tasks multiple times"
    ],
    "answer": "Repeat tasks multiple times"
  },
  {
    "id": "ans-015",
    "tool": "Ansible",
    "question": "What is Ansible Tags?",
    "options": [
      "Security tags",
      "Network tags",
      "Price tags",
      "Selectively run parts of playbooks"
    ],
    "answer": "Selectively run parts of playbooks"
  },
  {
    "id": "ans-016",
    "tool": "Ansible",
    "question": "What are Ansible Blocks?",
    "options": [
      "Group tasks together",
      "Code blocks",
      "Storage blocks",
      "Network blocks"
    ],
    "answer": "Group tasks together"
  },
  {
    "id": "ans-017",
    "tool": "Ansible",
    "question": "What is Ansible Strategy?",
    "options": [
      "Security strategy",
      "Network strategy",
      "How playbook execution is coordinated",
      "Business strategy"
    ],
    "answer": "How playbook execution is coordinated"
  },
  {
    "id": "ans-018",
    "tool": "Ansible",
    "question": "What are Ansible Variables?",
    "options": [
      "Network variables",
      "Math variables",
      "Store and reuse values",
      "System variables"
    ],
    "answer": "Store and reuse values"
  },
  {
    "id": "ans-019",
    "tool": "Ansible",
    "question": "What is Ansible Template?",
    "options": [
      "System template",
      "Code template",
      "Generate files dynamically",
      "Document template"
    ],
    "answer": "Generate files dynamically"
  },
  {
    "id": "ans-020",
    "tool": "Ansible",
    "question": "What are Ansible Notify?",
    "options": [
      "System alerts",
      "User notifications",
      "Trigger handler execution",
      "Email notifications"
    ],
    "answer": "Trigger handler execution"
  },
  {
    "id": "dd-001",
    "tool": "Datadog",
    "question": "What types of monitoring does Datadog provide?",
    "options": [
      "Only application performance monitoring",
      "Infrastructure, APM, logs, and synthetic monitoring",
      "Only log management",
      "Only infrastructure monitoring"
    ],
    "answer": "Infrastructure, APM, logs, and synthetic monitoring"
  },
  {
    "id": "dd-002",
    "tool": "Datadog",
    "question": "What is a Datadog Dashboard used for?",
    "options": [
      "Container orchestration",
      "Version control",
      "Visualizing and correlating metrics from different sources",
      "Code deployment"
    ],
    "answer": "Visualizing and correlating metrics from different sources"
  },
  {
    "id": "dd-003",
    "tool": "Datadog",
    "question": "What is a Datadog Monitor?",
    "options": [
      "A tool that watches metrics and triggers alerts",
      "A version control system",
      "A container runtime",
      "A code editor"
    ],
    "answer": "A tool that watches metrics and triggers alerts"
  },
  {
    "id": "dd-004",
    "tool": "Datadog",
    "question": "What is Datadog APM?",
    "options": [
      "Application Package Manager",
      "Asset Performance Management",
      "Automated Performance Metrics",
      "Application Performance Monitoring"
    ],
    "answer": "Application Performance Monitoring"
  },
  {
    "id": "dd-005",
    "tool": "Datadog",
    "question": "What are Datadog Integrations?",
    "options": [
      "Math integrations",
      "System integrations",
      "Code integrations",
      "Pre-built connections to various services and technologies"
    ],
    "answer": "Pre-built connections to various services and technologies"
  },
  {
    "id": "dd-006",
    "tool": "Datadog",
    "question": "What is Datadog Log Management?",
    "options": [
      "Archive logs",
      "Collect, process, and analyze log data",
      "Manage log files",
      "Delete logs"
    ],
    "answer": "Collect, process, and analyze log data"
  },
  {
    "id": "dd-007",
    "tool": "Datadog",
    "question": "What are Datadog Tags?",
    "options": [
      "Price tags",
      "Network tags",
      "Code tags",
      "Key-value pairs for filtering and grouping metrics"
    ],
    "answer": "Key-value pairs for filtering and grouping metrics"
  },
  {
    "id": "dd-008",
    "tool": "Datadog",
    "question": "What is Datadog Synthetic Monitoring?",
    "options": [
      "Artificial monitoring",
      "Monitor API endpoints and web applications from various locations",
      "Code monitoring",
      "System monitoring"
    ],
    "answer": "Monitor API endpoints and web applications from various locations"
  },
  {
    "id": "dd-009",
    "tool": "Datadog",
    "question": "What is Datadog Agent?",
    "options": [
      "Security agent",
      "Network agent",
      "Software that collects and reports metrics",
      "User agent"
    ],
    "answer": "Software that collects and reports metrics"
  },
  {
    "id": "dd-010",
    "tool": "Datadog",
    "question": "What are Datadog Metrics?",
    "options": [
      "Business metrics",
      "Math metrics",
      "Code metrics",
      "Time-series data points representing system measurements"
    ],
    "answer": "Time-series data points representing system measurements"
  },
  {
    "id": "dd-011",
    "tool": "Datadog",
    "question": "What is Datadog Trace?",
    "options": [
      "Network trace",
      "Code trace",
      "Distributed request tracing for applications",
      "Error trace"
    ],
    "answer": "Distributed request tracing for applications"
  },
  {
    "id": "dd-012",
    "tool": "Datadog",
    "question": "What are Datadog Events?",
    "options": [
      "User events",
      "Calendar events",
      "System events",
      "Records of significant state changes in infrastructure"
    ],
    "answer": "Records of significant state changes in infrastructure"
  },
  {
    "id": "dd-013",
    "tool": "Datadog",
    "question": "What is Datadog Service Level Objective (SLO)?",
    "options": [
      "Service level agreement",
      "Security level objective",
      "System level objective",
      "Target level of reliability for a service"
    ],
    "answer": "Target level of reliability for a service"
  },
  {
    "id": "dd-014",
    "tool": "Datadog",
    "question": "What are Datadog Notebooks?",
    "options": [
      "Network notebooks",
      "Collaborative documents for investigation and reporting",
      "Code notebooks",
      "System notebooks"
    ],
    "answer": "Collaborative documents for investigation and reporting"
  },
  {
    "id": "dd-015",
    "tool": "Datadog",
    "question": "What is Datadog RUM?",
    "options": [
      "Real User Monitoring for front-end performance",
      "Runtime monitoring",
      "Resource monitoring",
      "Remote monitoring"
    ],
    "answer": "Real User Monitoring for front-end performance"
  },
  {
    "id": "dd-016",
    "tool": "Datadog",
    "question": "What are Datadog Security Monitoring?",
    "options": [
      "Detect security threats across environment",
      "Physical security",
      "Network security",
      "Code security"
    ],
    "answer": "Detect security threats across environment"
  },
  {
    "id": "dd-017",
    "tool": "Datadog",
    "question": "What is Datadog Network Performance Monitoring?",
    "options": [
      "Monitor network devices",
      "Monitor wireless networks",
      "Monitor network traffic between services",
      "Monitor internet speed"
    ],
    "answer": "Monitor network traffic between services"
  },
  {
    "id": "dd-018",
    "tool": "Datadog",
    "question": "What are Datadog Host Maps?",
    "options": [
      "System maps",
      "Code maps",
      "Visualize hosts and their metrics",
      "Network maps"
    ],
    "answer": "Visualize hosts and their metrics"
  },
  {
    "id": "dd-019",
    "tool": "Datadog",
    "question": "What is Datadog CI Visibility?",
    "options": [
      "Monitor CI/CD pipeline performance",
      "Network inspection",
      "Code inspection",
      "System inspection"
    ],
    "answer": "Monitor CI/CD pipeline performance"
  },
  {
    "id": "dd-020",
    "tool": "Datadog",
    "question": "What are Datadog Watchdog?",
    "options": [
      "Network watchdog",
      "Security watchdog",
      "AI-powered anomaly and outlier detection",
      "System watchdog"
    ],
    "answer": "AI-powered anomaly and outlier detection"
  },
  {
    "id": "devops-001",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A testing framework",
      "A programming language",
      "A set of practices combining software development and IT operations",
      "A cloud provider"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-002",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Focusing only on coding without operations",
      "Slower delivery and manual testing",
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Replacing developers with AI"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-003",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "Only containerization",
      "Manual deployments, silos, and ticketing",
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration",
      "Waterfall methodology"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-004",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "DevOps is slower than traditional IT",
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual",
      "Both are the same",
      "Traditional IT has better scalability"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-005",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "A practice where developers frequently integrate code into a shared repository with automated testing",
      "Version control system",
      "Manual code review meetings",
      "Automated release of code to production"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-006",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Manual rollback strategies",
      "Automated release of validated code changes into production",
      "Deploying code once a year",
      "Only testing code"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-007",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Manually configuring servers",
      "Testing methodology",
      "Code for frontend development only",
      "Managing infrastructure using code for automation and consistency"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-008",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "A system that tracks code changes, enables collaboration and rollback",
      "An automation tool like Jenkins",
      "A tool for compiling code",
      "A monitoring dashboard"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-009",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Excel and Word",
      "Docker and Kubernetes",
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)",
      "Ansible and Puppet"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-010",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "An automated process including build, test, deploy, and monitor stages",
      "A manual process for code deployment",
      "A database schema",
      "A code editor feature"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": "devops-011",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A set of practices combining software development and IT operations",
      "A programming language",
      "A cloud provider",
      "A testing framework"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-012",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Slower delivery and manual testing",
      "Focusing only on coding without operations",
      "Replacing developers with AI"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-013",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration",
      "Waterfall methodology",
      "Manual deployments, silos, and ticketing",
      "Only containerization"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-014",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "Both are the same",
      "DevOps is slower than traditional IT",
      "Traditional IT has better scalability",
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-015",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "Version control system",
      "Automated release of code to production",
      "Manual code review meetings",
      "A practice where developers frequently integrate code into a shared repository with automated testing"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-016",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Manual rollback strategies",
      "Deploying code once a year",
      "Only testing code",
      "Automated release of validated code changes into production"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-017",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Managing infrastructure using code for automation and consistency",
      "Manually configuring servers",
      "Testing methodology",
      "Code for frontend development only"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-018",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "A system that tracks code changes, enables collaboration and rollback",
      "An automation tool like Jenkins",
      "A tool for compiling code",
      "A monitoring dashboard"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-019",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Ansible and Puppet",
      "Excel and Word",
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)",
      "Docker and Kubernetes"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-020",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "A code editor feature",
      "A database schema",
      "A manual process for code deployment",
      "An automated process including build, test, deploy, and monitor stages"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": "devops-021",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A testing framework",
      "A programming language",
      "A set of practices combining software development and IT operations",
      "A cloud provider"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-022",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Focusing only on coding without operations",
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Slower delivery and manual testing",
      "Replacing developers with AI"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-023",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "Manual deployments, silos, and ticketing",
      "Only containerization",
      "Waterfall methodology",
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-024",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "DevOps is slower than traditional IT",
      "Both are the same",
      "Traditional IT has better scalability",
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-025",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "Automated release of code to production",
      "Version control system",
      "A practice where developers frequently integrate code into a shared repository with automated testing",
      "Manual code review meetings"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-026",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Deploying code once a year",
      "Only testing code",
      "Manual rollback strategies",
      "Automated release of validated code changes into production"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-027",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Testing methodology",
      "Managing infrastructure using code for automation and consistency",
      "Manually configuring servers",
      "Code for frontend development only"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-028",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "A monitoring dashboard",
      "A system that tracks code changes, enables collaboration and rollback",
      "A tool for compiling code",
      "An automation tool like Jenkins"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-029",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Docker and Kubernetes",
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)",
      "Excel and Word",
      "Ansible and Puppet"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-030",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "A database schema",
      "A manual process for code deployment",
      "A code editor feature",
      "An automated process including build, test, deploy, and monitor stages"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": "devops-031",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A cloud provider",
      "A testing framework",
      "A set of practices combining software development and IT operations",
      "A programming language"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-032",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Slower delivery and manual testing",
      "Replacing developers with AI",
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Focusing only on coding without operations"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-033",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration",
      "Only containerization",
      "Manual deployments, silos, and ticketing",
      "Waterfall methodology"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-034",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "Traditional IT has better scalability",
      "DevOps is slower than traditional IT",
      "Both are the same",
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-035",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "A practice where developers frequently integrate code into a shared repository with automated testing",
      "Automated release of code to production",
      "Version control system",
      "Manual code review meetings"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-036",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Deploying code once a year",
      "Only testing code",
      "Automated release of validated code changes into production",
      "Manual rollback strategies"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-037",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Code for frontend development only",
      "Managing infrastructure using code for automation and consistency",
      "Testing methodology",
      "Manually configuring servers"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-038",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "An automation tool like Jenkins",
      "A tool for compiling code",
      "A monitoring dashboard",
      "A system that tracks code changes, enables collaboration and rollback"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-039",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)",
      "Excel and Word",
      "Docker and Kubernetes",
      "Ansible and Puppet"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-040",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "A database schema",
      "An automated process including build, test, deploy, and monitor stages",
      "A code editor feature",
      "A manual process for code deployment"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": "devops-041",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A set of practices combining software development and IT operations",
      "A cloud provider",
      "A testing framework",
      "A programming language"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-042",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Replacing developers with AI",
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Slower delivery and manual testing",
      "Focusing only on coding without operations"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-043",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "Waterfall methodology",
      "Manual deployments, silos, and ticketing",
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration",
      "Only containerization"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-044",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual",
      "Both are the same",
      "DevOps is slower than traditional IT",
      "Traditional IT has better scalability"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-045",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "Version control system",
      "Manual code review meetings",
      "A practice where developers frequently integrate code into a shared repository with automated testing",
      "Automated release of code to production"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-046",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Deploying code once a year",
      "Manual rollback strategies",
      "Automated release of validated code changes into production",
      "Only testing code"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-047",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Testing methodology",
      "Manually configuring servers",
      "Managing infrastructure using code for automation and consistency",
      "Code for frontend development only"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-048",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "An automation tool like Jenkins",
      "A system that tracks code changes, enables collaboration and rollback",
      "A monitoring dashboard",
      "A tool for compiling code"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-049",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Docker and Kubernetes",
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)",
      "Ansible and Puppet",
      "Excel and Word"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-050",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "A manual process for code deployment",
      "An automated process including build, test, deploy, and monitor stages",
      "A code editor feature",
      "A database schema"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": "devops-051",
    "tool": "DevOpsCoreConcepts",
    "question": "What is DevOps?",
    "options": [
      "A set of practices combining software development and IT operations",
      "A testing framework",
      "A cloud provider",
      "A programming language"
    ],
    "answer": "A set of practices combining software development and IT operations"
  },
  {
    "id": "devops-052",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the main goals of DevOps?",
    "options": [
      "Focusing only on coding without operations",
      "Faster delivery of software, improved collaboration, automation, and continuous feedback",
      "Replacing developers with AI",
      "Slower delivery and manual testing"
    ],
    "answer": "Faster delivery of software, improved collaboration, automation, and continuous feedback"
  },
  {
    "id": "devops-053",
    "tool": "DevOpsCoreConcepts",
    "question": "What are the key components of DevOps?",
    "options": [
      "Only containerization",
      "Waterfall methodology",
      "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration",
      "Manual deployments, silos, and ticketing"
    ],
    "answer": "CI/CD, Infrastructure as Code, Monitoring and Logging, Collaboration"
  },
  {
    "id": "devops-054",
    "tool": "DevOpsCoreConcepts",
    "question": "How does DevOps differ from traditional IT operations?",
    "options": [
      "DevOps is slower than traditional IT",
      "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual",
      "Traditional IT has better scalability",
      "Both are the same"
    ],
    "answer": "DevOps uses automation, collaboration, and continuous feedback, while traditional IT is siloed and manual"
  },
  {
    "id": "devops-055",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Integration (CI)?",
    "options": [
      "Automated release of code to production",
      "A practice where developers frequently integrate code into a shared repository with automated testing",
      "Manual code review meetings",
      "Version control system"
    ],
    "answer": "A practice where developers frequently integrate code into a shared repository with automated testing"
  },
  {
    "id": "devops-056",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Continuous Deployment (CD)?",
    "options": [
      "Automated release of validated code changes into production",
      "Deploying code once a year",
      "Manual rollback strategies",
      "Only testing code"
    ],
    "answer": "Automated release of validated code changes into production"
  },
  {
    "id": "devops-057",
    "tool": "DevOpsCoreConcepts",
    "question": "What is Infrastructure as Code (IaC)?",
    "options": [
      "Testing methodology",
      "Managing infrastructure using code for automation and consistency",
      "Code for frontend development only",
      "Manually configuring servers"
    ],
    "answer": "Managing infrastructure using code for automation and consistency"
  },
  {
    "id": "devops-058",
    "tool": "DevOpsCoreConcepts",
    "question": "What is version control, and why is it important?",
    "options": [
      "A monitoring dashboard",
      "A tool for compiling code",
      "A system that tracks code changes, enables collaboration and rollback",
      "An automation tool like Jenkins"
    ],
    "answer": "A system that tracks code changes, enables collaboration and rollback"
  },
  {
    "id": "devops-059",
    "tool": "DevOpsCoreConcepts",
    "question": "What are some popular version control tools?",
    "options": [
      "Ansible and Puppet",
      "Excel and Word",
      "Docker and Kubernetes",
      "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
    ],
    "answer": "Git, GitHub, GitLab, Bitbucket, Subversion (SVN)"
  },
  {
    "id": "devops-060",
    "tool": "DevOpsCoreConcepts",
    "question": "What is a DevOps pipeline?",
    "options": [
      "A manual process for code deployment",
      "A database schema",
      "An automated process including build, test, deploy, and monitor stages",
      "A code editor feature"
    ],
    "answer": "An automated process including build, test, deploy, and monitor stages"
  },
  {
    "id": 1,
    "tool": "Cloud",
    "question": "What is cloud computing?",
    "answer": "Cloud computing is the on-demand delivery of computing services such as servers, storage, databases, networking, and software over the internet.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Cloud computing is the on-demand delivery of computing services such as servers, storage, databases, networking, and software over the internet.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 2,
    "tool": "Cloud",
    "question": "What are the different types of cloud computing?",
    "answer": "Public Cloud, Private Cloud, Hybrid Cloud",
    "options": [
      "Public Cloud, Private Cloud, Hybrid Cloud",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 3,
    "tool": "Cloud",
    "question": "What are the benefits of cloud computing?",
    "answer": "Scalability, Cost Efficiency, Flexibility, Disaster Recovery",
    "options": [
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Scalability, Cost Efficiency, Flexibility, Disaster Recovery"
    ]
  },
  {
    "id": 4,
    "tool": "Cloud",
    "question": "What are the different cloud service models?",
    "answer": "IaaS, PaaS, SaaS",
    "options": [
      "IaaS, PaaS, SaaS",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 5,
    "tool": "Cloud",
    "question": "What is serverless computing?",
    "answer": "Serverless computing allows developers to run applications without managing infrastructure. Examples include AWS Lambda, Azure Functions.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "Serverless computing allows developers to run applications without managing infrastructure. Examples include AWS Lambda, Azure Functions.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 6,
    "tool": "Cloud",
    "question": "What is virtualization in cloud computing?",
    "answer": "Virtualization is creating virtual instances of servers, storage, or networks to optimize utilization.",
    "options": [
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud.",
      "Virtualization is creating virtual instances of servers, storage, or networks to optimize utilization.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 7,
    "tool": "Cloud",
    "question": "What is multi-cloud?",
    "answer": "Using multiple cloud service providers for redundancy, optimization, and avoiding vendor lock-in.",
    "options": [
      "Using multiple cloud service providers for redundancy, optimization, and avoiding vendor lock-in.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 8,
    "tool": "Cloud",
    "question": "What are some common cloud deployment models?",
    "answer": "Community Cloud, Hybrid Cloud, Public Cloud",
    "options": [
      "A physical server kept on-premises only.",
      "Community Cloud, Hybrid Cloud, Public Cloud",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 9,
    "tool": "Cloud",
    "question": "What is the difference between vertical and horizontal scaling?",
    "answer": "Vertical Scaling = add resources to one server. Horizontal Scaling = add more servers.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Vertical Scaling = add resources to one server. Horizontal Scaling = add more servers."
    ]
  },
  {
    "id": 10,
    "tool": "Cloud",
    "question": "What is an Availability Zone (AZ)?",
    "answer": "A physically separate data center within a region for fault tolerance and high availability.",
    "options": [
      "A physically separate data center within a region for fault tolerance and high availability.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 11,
    "tool": "Cloud",
    "question": "What is the Shared Responsibility Model in cloud security?",
    "answer": "Provider secures infrastructure, customer secures applications, data, and access.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Provider secures infrastructure, customer secures applications, data, and access."
    ]
  },
  {
    "id": 12,
    "tool": "Cloud",
    "question": "What is a Virtual Private Cloud (VPC)?",
    "answer": "An isolated cloud network with custom subnets, IPs, and security groups.",
    "options": [
      "A networking concept unrelated to cloud.",
      "An isolated cloud network with custom subnets, IPs, and security groups.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 13,
    "tool": "Cloud",
    "question": "What is an Elastic Load Balancer (ELB)?",
    "answer": "Distributes incoming traffic across multiple servers to ensure availability.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Distributes incoming traffic across multiple servers to ensure availability.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 14,
    "tool": "Cloud",
    "question": "What is Object Storage in the cloud?",
    "answer": "Stores data as objects. Examples: Amazon S3, Azure Blob.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Stores data as objects. Examples: Amazon S3, Azure Blob."
    ]
  },
  {
    "id": 15,
    "tool": "Cloud",
    "question": "What is Block Storage in cloud computing?",
    "answer": "Stores data in fixed blocks, often for databases. Examples: AWS EBS, Azure Disks.",
    "options": [
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "Stores data in fixed blocks, often for databases. Examples: AWS EBS, Azure Disks."
    ]
  },
  {
    "id": 16,
    "tool": "Cloud",
    "question": "What is a Content Delivery Network (CDN)?",
    "answer": "A distributed network caching content near users for faster delivery.",
    "options": [
      "A physical server kept on-premises only.",
      "A distributed network caching content near users for faster delivery.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 17,
    "tool": "Cloud",
    "question": "What is an IAM role in cloud security?",
    "answer": "IAM role provides permissions to services without hardcoding credentials.",
    "options": [
      "IAM role provides permissions to services without hardcoding credentials.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 18,
    "tool": "Cloud",
    "question": "What is CloudFormation in AWS?",
    "answer": "Infrastructure as Code service to automate provisioning with templates.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Infrastructure as Code service to automate provisioning with templates.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 19,
    "tool": "Cloud",
    "question": "What is Google Kubernetes Engine (GKE)?",
    "answer": "Google Cloud's managed Kubernetes service for container deployment.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Google Cloud's managed Kubernetes service for container deployment.",
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 20,
    "tool": "Cloud",
    "question": "What is Azure DevOps?",
    "answer": "A set of CI/CD and DevOps tools for building, testing, and deploying applications.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A set of CI/CD and DevOps tools for building, testing, and deploying applications.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 21,
    "tool": "Cloud",
    "question": "What is a cloud region?",
    "answer": "A geographic area where cloud providers host data centers with AZs.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A geographic area where cloud providers host data centers with AZs.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 22,
    "tool": "Cloud",
    "question": "How does AWS Lambda differ from EC2?",
    "answer": "Lambda = serverless, event-driven, pay per execution. EC2 = VM with manual scaling.",
    "options": [
      "Lambda = serverless, event-driven, pay per execution. EC2 = VM with manual scaling.",
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 23,
    "tool": "Cloud",
    "question": "What are Reserved Instances in AWS?",
    "answer": "Discounted instances committed for 1\u20133 years. Types: Standard, Convertible, Scheduled.",
    "options": [
      "Discounted instances committed for 1\u20133 years. Types: Standard, Convertible, Scheduled.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 24,
    "tool": "Cloud",
    "question": "How do you secure data in cloud storage?",
    "answer": "Encryption, IAM access controls, versioning, and auditing.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Encryption, IAM access controls, versioning, and auditing.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 25,
    "tool": "Cloud",
    "question": "What is the difference between Kubernetes and Docker Swarm?",
    "answer": "Kubernetes = complex, enterprise orchestration. Swarm = simpler, lightweight orchestration.",
    "options": [
      "Kubernetes = complex, enterprise orchestration. Swarm = simpler, lightweight orchestration.",
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 26,
    "tool": "Cloud",
    "question": "What is a Stateful vs. Stateless application in the cloud?",
    "answer": "Stateless = no session data (e.g. APIs). Stateful = keeps user state (e.g. DBs).",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Stateless = no session data (e.g. APIs). Stateful = keeps user state (e.g. DBs).",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 27,
    "tool": "Cloud",
    "question": "What is auto-scaling, and how does it work?",
    "answer": "Automatically adds/removes instances based on load. Types: Horizontal & Vertical scaling.",
    "options": [
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud.",
      "Automatically adds/removes instances based on load. Types: Horizontal & Vertical scaling.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 28,
    "tool": "Cloud",
    "question": "What is Terraform, and how does it help in cloud automation?",
    "answer": "IaC tool to define/provision multi-cloud infrastructure with declarative configs.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "IaC tool to define/provision multi-cloud infrastructure with declarative configs."
    ]
  },
  {
    "id": 29,
    "tool": "Cloud",
    "question": "How do you handle logging in a cloud environment?",
    "answer": "Centralized logging with CloudWatch, Azure Monitor, GCP Stackdriver.",
    "options": [
      "A physical server kept on-premises only.",
      "Centralized logging with CloudWatch, Azure Monitor, GCP Stackdriver.",
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 30,
    "tool": "Cloud",
    "question": "What is a Bastion Host, and why is it used?",
    "answer": "A public server to securely SSH into private cloud resources.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A public server to securely SSH into private cloud resources.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 31,
    "tool": "Cloud",
    "question": "What is a Service Level Agreement (SLA) in cloud computing?",
    "answer": "A contract defining uptime, support, and penalties if not met.",
    "options": [
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A contract defining uptime, support, and penalties if not met."
    ]
  },
  {
    "id": 32,
    "tool": "Cloud",
    "question": "How do you optimize cloud costs?",
    "answer": "Use Reserved/Spot instances, auto-scaling, monitoring, and right-sizing.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Use Reserved/Spot instances, auto-scaling, monitoring, and right-sizing.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 33,
    "tool": "Cloud",
    "question": "What is Kubernetes federation?",
    "answer": "Managing multiple Kubernetes clusters as one for HA and multi-cloud.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Managing multiple Kubernetes clusters as one for HA and multi-cloud.",
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 34,
    "tool": "Cloud",
    "question": "How does Chaos Engineering apply to cloud environments?",
    "answer": "Injecting failures to test system resilience (e.g. Netflix Simian Army).",
    "options": [
      "Injecting failures to test system resilience (e.g. Netflix Simian Army).",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 35,
    "tool": "Cloud",
    "question": "What is a Kubernetes operator?",
    "answer": "Automates management of complex stateful apps in Kubernetes.",
    "options": [
      "Automates management of complex stateful apps in Kubernetes.",
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 36,
    "tool": "Cloud",
    "question": "How do you implement multi-region deployments?",
    "answer": "Use replication, DNS routing, and failover mechanisms.",
    "options": [
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Use replication, DNS routing, and failover mechanisms."
    ]
  },
  {
    "id": 37,
    "tool": "Cloud",
    "question": "What is a Cloud Access Security Broker (CASB)?",
    "answer": "Security layer enforcing compliance, threat protection, and data security.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Security layer enforcing compliance, threat protection, and data security.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 38,
    "tool": "Cloud",
    "question": "How do you ensure compliance in cloud environments?",
    "answer": "Use frameworks (HIPAA, GDPR), auditing, and monitoring tools.",
    "options": [
      "Use frameworks (HIPAA, GDPR), auditing, and monitoring tools.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 39,
    "tool": "Cloud",
    "question": "What is zero-trust security in cloud environments?",
    "answer": "No implicit trust. Strict identity verification for all access.",
    "options": [
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "No implicit trust. Strict identity verification for all access."
    ]
  },
  {
    "id": 40,
    "tool": "Cloud",
    "question": "How does serverless architecture improve scalability?",
    "answer": "Auto-scales instantly with demand, no pre-provisioning needed.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Auto-scales instantly with demand, no pre-provisioning needed.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 41,
    "tool": "Cloud",
    "question": "What is an egress charge in cloud pricing?",
    "answer": "Fees for data transfer leaving the cloud provider's network.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Fees for data transfer leaving the cloud provider's network.",
      "A networking concept unrelated to cloud."
    ]
  },
  {
    "id": 42,
    "tool": "Cloud",
    "question": "How do you prevent DDoS attacks in the cloud?",
    "answer": "Use WAFs, DDoS protection, rate limiting, and ACLs.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Use WAFs, DDoS protection, rate limiting, and ACLs."
    ]
  },
  {
    "id": 43,
    "tool": "Cloud",
    "question": "What are the best practices for cloud security?",
    "answer": "Least privilege IAM, encryption, MFA, logging, monitoring.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Least privilege IAM, encryption, MFA, logging, monitoring.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 44,
    "tool": "Cloud",
    "question": "What are the risks of vendor lock-in, and how do you mitigate them?",
    "answer": "Dependency on one provider. Mitigate with multi-cloud and open-source tools.",
    "options": [
      "A networking concept unrelated to cloud.",
      "Dependency on one provider. Mitigate with multi-cloud and open-source tools.",
      "A physical server kept on-premises only.",
      "A mobile-only feature unrelated to cloud."
    ]
  },
  {
    "id": 45,
    "tool": "Cloud",
    "question": "What is Kubernetes pod affinity and anti-affinity?",
    "answer": "Rules controlling pod placement for performance or HA.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "Rules controlling pod placement for performance or HA.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 46,
    "tool": "Cloud",
    "question": "What is confidential computing in the cloud?",
    "answer": "Encrypts data during processing with TEEs. Examples: AWS Nitro Enclaves.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "Encrypts data during processing with TEEs. Examples: AWS Nitro Enclaves.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only."
    ]
  },
  {
    "id": 47,
    "tool": "Cloud",
    "question": "What is a policy-as-code approach in cloud security?",
    "answer": "Automating compliance/security rules using code. Tools: OPA, Sentinel.",
    "options": [
      "A mobile-only feature unrelated to cloud.",
      "A networking concept unrelated to cloud.",
      "A physical server kept on-premises only.",
      "Automating compliance/security rules using code. Tools: OPA, Sentinel."
    ]
  },
  {
    "id": 48,
    "tool": "Cloud",
    "question": "How do you implement cloud governance?",
    "answer": "Control IAM, budgets, compliance automation with policies.",
    "options": [
      "A networking concept unrelated to cloud.",
      "A mobile-only feature unrelated to cloud.",
      "Control IAM, budgets, compliance automation with policies.",
      "A physical server kept on-premises only."
    ]
  }
]
